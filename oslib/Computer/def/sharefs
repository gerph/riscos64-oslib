TITLE ShareFS;
AUTHOR "Jonathan Coxhead, jonathan@doves.demon.co.uk, 22 Aug 1995";

NEEDS OS, Freeway, Wimp;

TYPE
   ShareFS_Attr = .Bits;
CONST
   ShareFS_AttrDisc       = ShareFS_Attr: %1,
   ShareFS_AttrDiscP      = ShareFS_Attr: %10,
   ShareFS_AttrDiscRO     = ShareFS_Attr: %100,
   ShareFS_AttrHidden     = ShareFS_Attr: %1000,
   ShareFS_AttrSubdirAuth = ShareFS_Attr: %10000,
   ShareFS_AttrCDROM      = ShareFS_Attr: %100000,
   ShareFS_AttrCDROMAuth  = ShareFS_Attr: %1000000;

CONST
   ShareFS_FileTypeDiscP         = .Bits: 0xBD9,
   ShareFS_FileTypeDisc          = .Bits: 0xBDA,
   ShareFS_FileTypeSubdir        = .Bits: 0xFAF,
   ShareFS_FileTypeCDROM         = .Bits: 0xFAD,
   ShareFS_FileTypeDiscR         = .Bits: 0xFB4,
   ShareFS_FileTypeNoDisc        = .Bits: 0xFB5;

TYPE
   ShareFS_ShareFlags = .Bits;
CONST
   ShareFS_ShareDisc       = ShareFS_ShareFlags: %0,
   ShareFS_ShareDiscP      = ShareFS_ShareFlags: %1 "protected",
   ShareFS_ShareDiscRO     = ShareFS_ShareFlags: %10 "read-only",
   ShareFS_ShareHidden     = ShareFS_ShareFlags: %100 "hidden",
   ShareFS_ShareSubdirAuth = ShareFS_ShareFlags: %1000 "sub directory",
   ShareFS_ShareCDROM      = ShareFS_ShareFlags: %10000 "CDROM",
   ShareFS_ShareCDROMAuth  = ShareFS_ShareFlags: %100000 "authentication";

SWI
   ShareFS_CreateShare =
   (  NUMBER 0x47AC0 "Start sharing a local disc or subdirectory, or change
                      the mode of an existing share",
      ENTRY
      (  R0 = ShareFS_ShareFlags: flags,
         R1 -> .String: obj_name,
         R2 -> .String: dir_path,
         R3 = .Int: authentication
   )  );

TYPE
   ShareFS_StopFlags = .Bits;

SWI
   ShareFS_StopShare =
   (  NUMBER 0x47AC1 "Stop sharing a local directory",
      ENTRY
      (  R0 = ShareFS_StopFlags: flags,
         R1 -> .String: obj_name
   )  );

CONST
   ShareFS_NoMore = .Int: -1;

TYPE
   ShareFS_EnumerateFlags = .Bits;
CONST
   ShareFS_EnumerateProtected     = ShareFS_EnumerateFlags: %1,
   ShareFS_EnumerateReadOnly      = ShareFS_EnumerateFlags: %10,
   ShareFS_EnumerateHidden        = ShareFS_EnumerateFlags: %100,
   ShareFS_EnumerateSubdir        = ShareFS_EnumerateFlags: %1000,
   ShareFS_EnumerateCDROM         = ShareFS_EnumerateFlags: %10000,
   ShareFS_EnumerateAuthenticated = ShareFS_EnumerateFlags: &80000000;

SWI
   ShareFS_EnumerateShares =
   (  NUMBER 0x47AC2 "Enumerates authenticated or unauthenticated shares
                      currently active on this machine",
      ENTRY
      (  R0 = ShareFS_EnumerateFlags: flags,
         R4 = .Int: context "start with 0",
         R5 = .Int: authentication
      ),
      EXIT
      (  R1 -> .String: obj_name,
         R2 -> .String: dir_path,
         R3 = ShareFS_Attr: attr,
         R4! = .Int: context_out
   )  );

TYPE
   ShareFS_IdentifyShareFlags = .Bits;
CONST
   ShareFS_IdentifyShareShareName = ShareFS_IdentifyShareFlags: %1;

SWI
   ShareFS_IdentifyShare =
   (  NUMBER 0x47AC3 "To identify a share given its name or directory name
                      - RISC OS 6",
      ENTRY
      (  R0 = ShareFS_IdentifyShareFlags: flags,
         R1 -> .String: obj_name_or_dir_path,
         R2 = .Ref .Data: buf,
         R3 = .Int: buf_size
      ),
      EXIT
      (  R0! = ShareFS_Attr: attr,
         R3 = .Int: buf_size_out
   )  );

CONST
   Message_FileShareDir = .Bits: 0x408;
TYPE
   ShareFSMessageFileShareDir_Flags = .Bits;
CONST
   ShareFSMessageFileShareDirFlags_Protected      = ShareFSMessageFileShareDir_Flags: 0x01,
   ShareFSMessageFileShareDirFlags_ReadOnly       = ShareFSMessageFileShareDir_Flags: 0x02,
   ShareFSMessageFileShareDirFlags_Hidden         = ShareFSMessageFileShareDir_Flags: 0x04,
   ShareFSMessageFileShareDirFlags_Authenticated  = ShareFSMessageFileShareDir_Flags: 0x08,
   ShareFSMessageFileShareDirFlags_CDROM          = ShareFSMessageFileShareDir_Flags: 0x10,
   ShareFSMessageFileShareDirFlags_WindowPosGiven = ShareFSMessageFileShareDir_Flags: 0x40000000;
TYPE
   ShareFS_MessageFileShareDir =
   .Struct
   (  ShareFSMessageFileShareDir_Flags: flags,
      .Int: xpos,
      .Int: ypos,
      [224] .Char: dir_name
   );

TYPE
   ShareFS_StartingFlags = .Bits;

SWI
   // Extends OS_ServiceCall
   Service_ShareFSStarting =
   (  NUMBER 0x30,
      ENTRY
      (  R1 # 0x97 "ShareFS has started up",
         R2 = ShareFS_StartingFlags: flags
   )  );

TYPE
   ShareFS_TerminatingFlags = .Bits;

SWI
   // Extends OS_ServiceCall
   Service_ShareFSTerminating =
   (  NUMBER 0x30,
      ENTRY
      (  R1 # 0x98 "ShareFS is terminating",
         R2 = ShareFS_TerminatingFlags: flags
   )  );

SWI
   // Extends OS_ServiceCall
   Service_Sharing =
   (  NUMBER 0x30,
      ENTRY
      (  R0 -> .String: fsname,
         R1 # 0x801C8 "Share changed",
         R2 = .Int: state "0 object unshared, 1 object shared",
         R3 -> .String: dir_name,
         R4 -> .String: obj_name,
         R5 = .Int: priv_data
   )  )
